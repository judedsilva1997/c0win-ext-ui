{"version":3,"sources":["config/index.js","context/AuthContext.js","components/Beneficiaries/Beneficiaries.js","util.js","components/Captcha/Captcha.js","components/LocationSelector/LocationSelector.js","components/AuthContextProvder/index.js","components/Login/Login.js","components/TermsOfUse/TermsOfUse.js","App.js","reportWebVitals.js","index.js"],"names":["BASE_URL","STATE_URL","DISTRICT_URL","BENE_URL","BY_PIN","BY_DISTRICT","SCHEDULE","CAPTCHA","GENERATE_OTP","LOGIN","AuthContext","React","createContext","Beneficiaries","nextStep","useState","beneficiaries","setBeneficiaries","useContext","auth","selectedBeneficiaries","useEffect","a","axios","get","urls","headers","Authorization","authToken","response","data","status","setAuthToken","className","length","map","bene","Form","Check","type","selected","onClick","label","name","Button","variant","filtered","filter","formatDate","d","month","getMonth","day","getDate","year","getFullYear","join","Captcha","setCaptcha","captchaImage","setCaptchaImage","post","captcha","dangerouslySetInnerHTML","__html","Group","controlId","Label","Control","placeholder","onChange","e","target","value","LocationSelector","locationBy","setLocationBy","ButtonGroup","toggle","ToggleButton","checked","LocationByDistrict","LocationByPinCode","splitBetween18and45","above18","above45","forEach","dose","vaccine","dose1_date","dose2_date","parseInt","Date","birth_year","push","id","beneficiary_reference_id","bookSlots","apiCallFn","addBeneficiariesToBooked","interval","setInterval","then","filteredCenters","filteredCenter","sessions","session","min_age_limit","booked","toUpperCase","bookTheSession","console","log","center","slot","date","slots","clearInterval","catch","err","body","center_id","String","session_id","pinCode","setPinCode","disabled","setDisabled","bookedbeneficiaries","setBookedBeneficiaries","bookedList","useRef","statusMessage","setStatusMessage","current","useCallback","dateToday","formattedDate","filterAvailabeCenters","Row","Col","Spinner","as","animation","size","role","aria-hidden","Table","striped","bordered","hover","index","centers","filteredSession","available_capacity","state","setState","statesList","setStatesList","districtList","setDistrictList","district","setDistrict","allowedZipCodes","setAllowedZipCodes","district_id","includes","pincode","districts","states","Dropdown","Toggle","state_name","Menu","eachState","Item","getDistrictsList","state_id","district_name","district_name_l","eachDistrict","Text","AuthContextProvider","props","Provider","children","Login","mobile","setMobile","txnId","setTxnId","otp","setOTP","match","secret","SHA256","toString","token","setSelectedBeneficiaries","setStep","TermsOfUse","agreed","setAgreed","Modal","show","onHide","Header","Title","Body","Footer","App","step","error","setError","isChromeExtension","setIsChromeExtension","steps","window","chrome","runtime","tabs","query","active","lastFocusedWindow","scripting","executeScript","files","tabId","onMessage","addListener","message","sender","sendResponse","style","width","height","closeButton","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f955e4c4.chunk.js","sourcesContent":["const BASE_URL = \"https://cdn-api.co-vin.in/api\";\n\n// const BASE_URL = \"http://192.168.0.104:3000\";\n\nexport default {\n  STATE_URL: `${BASE_URL}/v2/admin/location/states`,\n  DISTRICT_URL: `${BASE_URL}/v2/admin/location/districts`,\n  BENE_URL: `${BASE_URL}/v2/appointment/beneficiaries`,\n  BY_PIN: `${BASE_URL}/v2/appointment/sessions/calendarByPin`,\n  BY_DISTRICT: `${BASE_URL}/v2/appointment/sessions/calendarByDistrict`,\n  SCHEDULE: `${BASE_URL}/v2/appointment/schedule`,\n  CAPTCHA: `${BASE_URL}/v2/auth/getRecaptcha`,\n  GENERATE_OTP: `${BASE_URL}/v2/auth/generateMobileOTP`,\n  LOGIN: `${BASE_URL}/v2/auth/validateMobileOtp`,\n};\n","import React from \"react\";\nconst AuthContext = React.createContext();\nexport default AuthContext;\n","import { isValidElement, useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport urls from \"../../config\";\nimport \"./Beneficiaries.css\";\nimport { Form, Button } from \"react-bootstrap\";\nimport AuthContext from \"../../context/AuthContext\";\n\nexport default function Beneficiaries({ nextStep }) {\n  const [beneficiaries, setBeneficiaries] = useState([]);\n  const { auth, selectedBeneficiaries } = useContext(AuthContext);\n  useEffect(async () => {\n    try {\n      const response = await axios.get(urls.BENE_URL, {\n        headers: {\n          Authorization: `Bearer ${auth.authToken}`,\n        },\n      });\n\n      if (response && response.data) {\n        setBeneficiaries(response.data.beneficiaries);\n      }\n    } catch (err) {\n      if (err && err.response && err.response.status === 401) {\n        auth.setAuthToken(null);\n        return;\n      }\n    }\n  }, []);\n  return (\n    <div className=\"beneficiaries\">\n      <h5>Select the Beneficiaries you want to book for : </h5>\n      {beneficiaries.length > 0 ? (\n        <>\n          {beneficiaries.map((bene) => (\n            <div className=\"beneficiary\">\n              <Form.Check\n                type=\"checkbox\"\n                selected={bene.selected}\n                onClick={() => {\n                  bene.selected = true;\n                }}\n                label={bene.name}\n              />\n            </div>\n          ))}\n          <Button\n            variant=\"primary\"\n            onClick={() => {\n              const filtered = beneficiaries.filter((bene) => bene.selected);\n              nextStep(filtered);\n            }}\n            type=\"submit\"\n          >\n            Schedule for selected beneficiaries\n          </Button>\n        </>\n      ) : (\n        <div className=\"error-msg\">No Beneficiaries To Display</div>\n      )}\n    </div>\n  );\n}\n","export function formatDate(d) {\n  var month = \"\" + (d.getMonth() + 1),\n    day = \"\" + d.getDate(),\n    year = d.getFullYear();\n\n  if (month.length < 2) month = \"0\" + month;\n  if (day.length < 2) day = \"0\" + day;\n\n  return [day, month, year].join(\"-\");\n}\n","import { useContext, useEffect, useState } from \"react\";\nimport urls from \"../../config\";\nimport { Form } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport AuthContext from \"../../context/AuthContext\";\nexport default function Captcha({ setCaptcha }) {\n  const [captchaImage, setCaptchaImage] = useState();\n  const { auth, selectedBeneficiaries } = useContext(AuthContext);\n  useEffect(async () => {\n    try {\n      const response = await axios.post(\n        urls.CAPTCHA,\n        {},\n        {\n          headers: {\n            Authorization: `Bearer ${auth.authToken}`,\n          },\n        }\n      );\n      if (response.data && response.data.captcha) {\n        setCaptchaImage(response.data.captcha);\n      }\n    } catch (err) {\n      if (err && err.response && err.response.status === 401) {\n        auth.setAuthToken(null);\n        return;\n      }\n    }\n  }, []);\n  return (\n    <div className=\"captcha\">\n      <div\n        className=\"image\"\n        dangerouslySetInnerHTML={{\n          __html: captchaImage,\n        }}\n      ></div>\n      <Form.Group controlId=\"formBasicEmail\">\n        <Form.Label>Enter the above captcha</Form.Label>\n        <Form.Control\n          type=\"email\"\n          placeholder=\"\"\n          onChange={(e) => {\n            setCaptcha(e.target.value);\n          }}\n        />\n      </Form.Group>\n    </div>\n  );\n}\n","import { useCallback, useContext, useEffect, useRef, useState } from \"react\";\nimport {\n  ButtonGroup,\n  Form,\n  Col,\n  Button,\n  Dropdown,\n  ToggleButton,\n  Table,\n  Spinner,\n} from \"react-bootstrap\";\nimport axios from \"axios\";\nimport urls from \"../../config\";\nimport \"./LocationSelector.css\";\nimport { formatDate } from \"../../util\";\nimport Captcha from \"../Captcha/Captcha\";\nimport AuthContext from \"../../context/AuthContext\";\n\nexport default function LocationSelector() {\n  const [locationBy, setLocationBy] = useState(0);\n\n  return (\n    <div className=\"location-selector\">\n      <h5>Select the location:</h5>\n\n      <span>Location By : </span>\n      <ButtonGroup toggle>\n        <ToggleButton\n          type=\"radio\"\n          variant=\"secondary\"\n          name=\"Location By District\"\n          value={0}\n          checked={0 === locationBy}\n          onClick={(e) => setLocationBy(0)}\n        >\n          By Pin Code\n        </ToggleButton>\n        <ToggleButton\n          type=\"radio\"\n          variant=\"secondary\"\n          name=\"Location by Pin Code\"\n          value={1}\n          checked={1 === locationBy}\n          onClick={(e) => setLocationBy(1)}\n        >\n          By District\n        </ToggleButton>\n      </ButtonGroup>\n      {locationBy ? <LocationByDistrict /> : <LocationByPinCode />}\n    </div>\n  );\n}\n\nfunction splitBetween18and45(selectedBeneficiaries) {\n  const [above18, above45] = [[], []];\n  selectedBeneficiaries.forEach((bene) => {\n    var dose = 1;\n    var vaccine = bene.vaccine;\n    if (bene.dose1_date && !bene.dose2_date) {\n      dose = 2;\n    }\n    if (parseInt(new Date().getFullYear()) - parseInt(bene.birth_year) >= 45) {\n      above45.push({\n        id: bene.beneficiary_reference_id,\n        dose,\n        vaccine,\n        name: bene.name,\n      });\n    } else if (\n      parseInt(new Date().getFullYear()) - parseInt(bene.birth_year) >=\n      18\n    ) {\n      above18.push({\n        id: bene.beneficiary_reference_id,\n        dose,\n        vaccine,\n        name: bene.name,\n      });\n    }\n  });\n  return [above18, above45];\n}\n\nasync function bookSlots(\n  auth,\n  selectedBeneficiaries,\n  apiCallFn,\n  addBeneficiariesToBooked,\n  captcha\n) {\n  var [above18, above45] = splitBetween18and45(selectedBeneficiaries);\n  const interval = setInterval(() => {\n    apiCallFn(above18, above45)\n      .then(async (filteredCenters) => {\n        for (const filteredCenter of filteredCenters) {\n          filteredCenter.sessions.forEach((session) => {\n            if (session.min_age_limit === 18 && above18.length > 0) {\n              above18.forEach(async (bene) => {\n                if (bene.booked) {\n                  return;\n                }\n                if (\n                  bene.vaccine &&\n                  bene.vaccine.toUpperCase() !== session.vaccine.toUpperCase()\n                ) {\n                  return;\n                }\n                const status = await bookTheSession(\n                  auth,\n                  bene,\n                  session,\n                  filteredCenter,\n                  captcha\n                );\n                if (status === 200) {\n                  console.log(`Booked for ${bene}`);\n                  bene.booked = true;\n                  bene.center = filteredCenter.name;\n                  bene.slot = `${session.date} ${session.slots[0]}`;\n                  addBeneficiariesToBooked(bene);\n                } else if (status === 401) {\n                  clearInterval(interval);\n                  auth.setAuthToken(null);\n                }\n              });\n            }\n            if (session.min_age_limit === 45 && above45.length > 0) {\n              above45.forEach(async (bene) => {\n                if (bene.booked) {\n                  return;\n                }\n                if (\n                  bene.vaccine &&\n                  bene.vaccine.toUpperCase() !== session.vaccine.toUpperCase()\n                ) {\n                  return;\n                }\n                const status = await bookTheSession(\n                  auth,\n                  bene,\n                  session,\n                  filteredCenter,\n                  captcha\n                );\n                if (status === 200) {\n                  console.log(`Booked for ${bene}`);\n                  bene.booked = true;\n                  bene.center = filteredCenter.name;\n                  bene.slot = `${session.date} ${session.slots[0]}`;\n                  addBeneficiariesToBooked(bene);\n                } else if (status === 401) {\n                  clearInterval(interval);\n                  auth.setAuthToken(null);\n                }\n              });\n            }\n          });\n        }\n        above18 = above18.filter((bene) => !bene.booked);\n        above45 = above45.filter((bene) => !bene.booked);\n\n        if (above18.length === 0 && above45.length === 0) {\n          clearInterval(interval);\n        }\n      })\n      .catch((err) => {\n        if (err && err.response && err.response.status === 401) {\n          clearInterval(interval);\n          auth.setAuthToken(null);\n        }\n      });\n  }, 10000);\n}\nasync function bookTheSession(auth, bene, session, filteredCenter, captcha) {\n  const body = {\n    center_id: String(filteredCenter.center_id),\n    session_id: session.session_id,\n    beneficiaries: [bene.id],\n    slot: session.slots[0],\n    dose: bene.dose,\n    captcha,\n  };\n  try {\n    const response = await axios.post(`${urls.SCHEDULE}`, body, {\n      headers: {\n        Authorization: `Bearer ${auth.authToken}`,\n      },\n    });\n    if (response.status === 200) return 200;\n  } catch (err) {\n    if (err && err.response && err.response.status === 401) {\n      return 401;\n    }\n  }\n  return false;\n}\n\nfunction LocationByPinCode() {\n  const [pinCode, setPinCode] = useState(\"\");\n  const [disabled, setDisabled] = useState(false);\n  const [bookedbeneficiaries, setBookedBeneficiaries] = useState([]);\n  const bookedList = useRef([]);\n  const [captcha, setCaptcha] = useState();\n  const { auth, selectedBeneficiaries } = useContext(AuthContext);\n  const [statusMessage, setStatusMessage] = useState(\"Booking...\");\n\n  function addBeneficiariesToBooked(bene) {\n    bookedList.current = [...bookedList.current, bene];\n    setBookedBeneficiaries(bookedList.current);\n  }\n  const apiCallFn = useCallback(async function (above18, above45) {\n    setStatusMessage(\"Checking for slots\");\n    var dateToday = new Date();\n    const formattedDate = formatDate(dateToday);\n    try {\n      const response = await axios.get(\n        `${urls.BY_PIN}?pincode=${pinCode}&date=${formattedDate}`,\n        {\n          headers: {\n            Authorization: `Bearer ${auth.authToken}`,\n          },\n        }\n      );\n      const data = response.data;\n      const filteredCenters = filterAvailabeCenters(data, above18, above45);\n      if (filteredCenters.length) {\n        setStatusMessage(\"Found probable slots\");\n      } else {\n        setStatusMessage(\"No vacant slots\");\n      }\n      return filteredCenters;\n    } catch (err) {\n      setStatusMessage(\"Some error response\");\n      if (err && err.response && err.response.status === 401) {\n        throw err;\n      }\n    }\n    return [];\n  });\n  return (\n    <>\n      <div className=\"loc\">\n        <Form.Row>\n          <Col>\n            <Form.Control\n              type=\"number\"\n              onChange={(e) => {\n                setPinCode(e.target.value);\n              }}\n              value={pinCode}\n              placeholder=\"Enter Pin Code\"\n            />\n          </Col>\n        </Form.Row>\n        <Captcha setCaptcha={setCaptcha} />\n        <Button\n          variant=\"primary\"\n          disabled={disabled || !pinCode}\n          onClick={() => {\n            setDisabled(true);\n            bookSlots(\n              auth,\n              selectedBeneficiaries.selectedBeneficiaries,\n              apiCallFn,\n              addBeneficiariesToBooked,\n              captcha\n            );\n          }}\n          type=\"submit\"\n        >\n          {!disabled ? (\n            \"Book Slots\"\n          ) : bookedbeneficiaries.length ===\n            selectedBeneficiaries.selectedBeneficiaries.length ? (\n            \"Booked\"\n          ) : (\n            <>\n              <Spinner\n                as=\"span\"\n                animation=\"grow\"\n                size=\"sm\"\n                role=\"status\"\n                aria-hidden=\"true\"\n              />\n              {statusMessage}\n            </>\n          )}\n        </Button>\n      </div>\n      {bookedbeneficiaries.length > 0 && (\n        <div className=\"booked-beneficiaries\">\n          <Table striped bordered hover variant=\"dark\">\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>Beneficiary Name</th>\n                <th>Hospital</th>\n                <th>Session</th>\n              </tr>\n            </thead>\n            <tbody>\n              {bookedbeneficiaries.map((bene, index) => (\n                <tr>\n                  <td>{index + 1}</td>\n                  <td>{bene.name}</td>\n                  <td>{bene.center}</td>\n                  <td>{bene.slot}</td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </div>\n      )}\n    </>\n  );\n}\nfunction filterAvailabeCenters(data, above18, above45) {\n  if (data && data.centers) {\n    const filteredCenters = data.centers.filter((center) => {\n      var filteredSession = (center.sessions || []).filter((session) => {\n        if (session.available_capacity > 0) {\n          return (\n            (above18.length && session.min_age_limit === 18) ||\n            (above45.length && session.min_age_limit === 45)\n          );\n        }\n      });\n      center.sessions = filteredSession;\n      return filteredSession.length > 0;\n    });\n    return filteredCenters;\n  }\n  return [];\n}\n\nfunction LocationByDistrict() {\n  const [state, setState] = useState(null);\n  const [statesList, setStatesList] = useState([]);\n  const [districtList, setDistrictList] = useState([]);\n  const [district, setDistrict] = useState(null);\n  const [disabled, setDisabled] = useState(false);\n  const [bookedbeneficiaries, setBookedBeneficiaries] = useState([]);\n  const [allowedZipCodes, setAllowedZipCodes] = useState(\"\");\n  const [captcha, setCaptcha] = useState(\"\");\n  const { auth, selectedBeneficiaries } = useContext(AuthContext);\n  const [statusMessage, setStatusMessage] = useState(\"Booking...\");\n  const bookedList = useRef([]);\n  function addBeneficiariesToBooked(bene) {\n    bookedList.current = [...bookedList.current, bene];\n    setBookedBeneficiaries(bookedList.current);\n  }\n\n  const apiCallFn = useCallback(async function (above18, above45) {\n    setStatusMessage(\"Checking for slots\");\n    var dateToday = new Date();\n    const formattedDate = formatDate(dateToday);\n    try {\n      const response = await axios.get(\n        `${urls.BY_DISTRICT}?district_id=${district.district_id}&date=${formattedDate}`,\n        {\n          headers: {\n            Authorization: `Bearer ${auth.authToken}`,\n          },\n        }\n      );\n\n      const data = response.data;\n      var filteredCenters = filterAvailabeCenters(data, above18, above45);\n      if (allowedZipCodes && allowedZipCodes != \"\")\n        filteredCenters = filteredCenters.filter((center) =>\n          allowedZipCodes.includes(center.pincode)\n        );\n      if (filteredCenters.length) {\n        setStatusMessage(\"Found probable slots\");\n      } else {\n        setStatusMessage(\"No vacant slots\");\n      }\n      return filteredCenters;\n    } catch (err) {\n      setStatusMessage(\"Some error response\");\n      if (err && err.response && err.response.status === 401) {\n        throw err;\n      }\n    }\n    return [];\n  });\n\n  useEffect(async () => {\n    try {\n      const response = await axios.get(urls.STATE_URL, {\n        headers: {\n          Authorization: `Bearer ${auth.authToken}`,\n        },\n      });\n\n      const data = response.data;\n      if (data && data.states) {\n        setStatesList(data.states);\n      }\n    } catch (err) {\n      console.log(err);\n      if (err && err.response && err.response.status === 401) {\n        auth.setAuthToken(null);\n        return;\n      }\n    }\n  }, []);\n\n  async function getDistrictsList(id) {\n    setDistrictList([]);\n    try {\n      const response = await axios.get(`${urls.DISTRICT_URL}/${id}`, {\n        headers: {\n          Authorization: `Bearer ${auth.authToken}`,\n        },\n      });\n      const data = response.data;\n      if (data && data.districts) {\n        setDistrictList(data.districts);\n      }\n    } catch (err) {\n      if (err && err.response && err.response.status === 401) {\n        auth.setAuthToken(null);\n        return;\n      }\n    }\n  }\n\n  return (\n    <>\n      <div className=\"loc\">\n        <div className=\"dropdowns\">\n          {statesList.length > 0 && (\n            <Dropdown>\n              <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                {state ? state.state_name : \"Select State\"}\n              </Dropdown.Toggle>\n\n              <Dropdown.Menu>\n                {statesList.map((eachState) => (\n                  <Dropdown.Item\n                    onClick={() => {\n                      setState(eachState);\n                      getDistrictsList(eachState.state_id);\n                    }}\n                  >\n                    {eachState.state_name}\n                  </Dropdown.Item>\n                ))}\n              </Dropdown.Menu>\n            </Dropdown>\n          )}\n          {districtList.length > 0 && (\n            <Dropdown>\n              <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                {district\n                  ? district.district_name || district.district_name_l\n                  : \"Select district\"}\n              </Dropdown.Toggle>\n\n              <Dropdown.Menu>\n                {districtList.map((eachDistrict) => (\n                  <Dropdown.Item\n                    onClick={() => {\n                      setDistrict(eachDistrict);\n                    }}\n                  >\n                    {eachDistrict.district_name || eachDistrict.district_name_l}\n                  </Dropdown.Item>\n                ))}\n              </Dropdown.Menu>\n            </Dropdown>\n          )}\n        </div>\n        {!!district && (\n          <>\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label>\n                Enter allowed pin codes seperated by commas. For eg.\n                400081,400070\n              </Form.Label>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"\"\n                value={allowedZipCodes}\n                onChange={(e) => {\n                  setAllowedZipCodes(e.target.value);\n                }}\n              />\n              <Form.Text className=\"text-muted\">\n                If left empty, you may get a slot anywhere in the district you\n                have selected\n              </Form.Text>\n            </Form.Group>\n            <Captcha setCaptcha={setCaptcha} />\n            <Button\n              variant=\"primary\"\n              disabled={disabled || !district}\n              onClick={() => {\n                setDisabled(true);\n                bookSlots(\n                  auth,\n                  selectedBeneficiaries.selectedBeneficiaries,\n                  apiCallFn,\n                  addBeneficiariesToBooked,\n                  captcha\n                );\n              }}\n              type=\"submit\"\n            >\n              {!disabled ? (\n                \"Book Slots\"\n              ) : bookedbeneficiaries.length ===\n                selectedBeneficiaries.selectedBeneficiaries.length ? (\n                \"Booked\"\n              ) : (\n                <>\n                  <Spinner\n                    as=\"span\"\n                    animation=\"grow\"\n                    size=\"sm\"\n                    role=\"status\"\n                    aria-hidden=\"true\"\n                  />\n                  {statusMessage}\n                </>\n              )}\n            </Button>\n          </>\n        )}\n      </div>\n      {bookedbeneficiaries.length > 0 && (\n        <div className=\"booked-beneficiaries\">\n          <Table striped bordered hover variant=\"dark\">\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>Beneficiary Name</th>\n                <th>Hospital</th>\n                <th>Session</th>\n              </tr>\n            </thead>\n            <tbody>\n              {bookedbeneficiaries.map((bene, index) => (\n                <tr>\n                  <td>{index + 1}</td>\n                  <td>{bene.name}</td>\n                  <td>{bene.center}</td>\n                  <td>{bene.slot}</td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </div>\n      )}\n    </>\n  );\n}\n","import AuthContext from \"../../context/AuthContext\";\n\nexport default function AuthContextProvider(props) {\n  return (\n    <AuthContext.Provider value={props.value}>\n      {props.children}\n    </AuthContext.Provider>\n  );\n}\n","import axios from \"axios\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport AuthContext from \"../../context/AuthContext\";\nimport urls from \"../../config\";\nimport { SHA256 } from \"crypto-js\";\nexport default function Login(props) {\n  const { auth, selectedBeneficiaries } = useContext(AuthContext);\n  const [mobile, setMobile] = useState(\"\");\n  const [txnId, setTxnId] = useState(false);\n  const [otp, setOTP] = useState(\"\");\n  const [disabled, setDisabled] = useState(false);\n  useEffect(() => {\n    selectedBeneficiaries.setSelectedBeneficiaries([]);\n    props.setStep(0);\n  }, []);\n  async function generateOTP() {\n    setDisabled(true);\n    if (mobile.match(\"[0-9]{10}\")) {\n      try {\n        const response = await axios.post(urls.GENERATE_OTP, {\n          mobile,\n          secret:\n            \"U2FsdGVkX191jxkObYJ4qgB38NmH2OzVv5KG6zVOw6B/zXwgrpWqvmeA11dOb8DpoV7YFvZC0FSgTgx8f9uXjQ==\",\n        });\n        setTxnId(response.data.txnId);\n      } catch (err) {}\n    }\n    setDisabled(false);\n  }\n  async function validateOTP() {\n    setDisabled(true);\n    if (otp.match(\"[0-9]{6}\")) {\n      try {\n        const response = await axios.post(urls.LOGIN, {\n          txnId,\n          otp: SHA256(otp).toString(),\n        });\n        if (response.data.token) {\n          setDisabled(false);\n          auth.setAuthToken(response.data.token);\n        } else {\n          setDisabled(false);\n        }\n      } catch (err) {\n        console.log(err);\n        setDisabled(false);\n      }\n    }\n  }\n\n  return (\n    <>\n      {!txnId ? (\n        <>\n          <h1>Login</h1>\n          <Form.Group>\n            <Form.Label>Enter Phone Number</Form.Label>\n            <Form.Control\n              type=\"text\"\n              value={mobile}\n              onChange={(e) => setMobile(e.target.value)}\n              placeholder=\"Enter phone number\"\n            />\n            <Form.Text className=\"text-muted\">\n              We'll never share your number with anyone else.\n            </Form.Text>\n          </Form.Group>\n          <Button\n            variant=\"primary\"\n            disabled={disabled}\n            type=\"submit\"\n            onClick={generateOTP}\n          >\n            GET OTP\n          </Button>\n        </>\n      ) : (\n        <>\n          <Form.Group controlId=\"formBasicPassword\">\n            <Form.Label>Enter OTP</Form.Label>\n            <Form.Control\n              type=\"password\"\n              value={otp}\n              onChange={(e) => setOTP(e.target.value)}\n              placeholder=\"Password\"\n            />\n          </Form.Group>\n\n          <Button\n            variant=\"primary\"\n            disabled={disabled || !otp}\n            type=\"submit\"\n            onClick={validateOTP}\n          >\n            Login\n          </Button>\n        </>\n      )}\n    </>\n  );\n}\n","import { useState } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\n\nexport default function TermsOfUse() {\n  const [agreed, setAgreed] = useState(false);\n\n  return (\n    <Modal show={!agreed} size=\"lg\" onHide={() => {}}>\n      <Modal.Header>\n        <Modal.Title>Please read the terms of use</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <p>\n          This Application has been developed by the author as a POC. This app\n          in no way is a replacement for COWIN. Any mistake/ issues/\n          liabilities/ problems/ penalties caused to the users themselves/ to\n          other users of cowin/ to the cowin app team, are agreed upon by the\n          user to be borne by the user themselves. The user thus understands the\n          risks of continuing.\n        </p>\n        <p> If you disagree you may choose to close the app</p>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"primary\" onClick={() => setAgreed(true)}>\n          I understand, I agree to the terms of use. I would like to use this\n          app.\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n","import \"./App.css\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport Beneficiaries from \"./components/Beneficiaries/Beneficiaries\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport LocationSelector from \"./components/LocationSelector/LocationSelector\";\nimport AuthContextProvider from \"./components/AuthContextProvder\";\nimport Login from \"./components/Login/Login\";\nimport TermsOfUse from \"./components/TermsOfUse/TermsOfUse\";\n\nfunction App() {\n  const [authToken, setAuthToken] = useState(null);\n  const [step, setStep] = useState(0);\n  const [selectedBeneficiaries, setSelectedBeneficiaries] = useState([]);\n  const [error, setError] = useState();\n  const [isChromeExtension, setIsChromeExtension] = useState(false);\n\n  const nextStep = useCallback((filtered) => {\n    if (filtered.length > 0) {\n      setStep(step + 1);\n      setSelectedBeneficiaries(filtered);\n    } else {\n      setError(\"Select Atleast 1 Beneficiary\");\n    }\n  });\n\n  const steps = [<Beneficiaries nextStep={nextStep} />, <LocationSelector />];\n\n  useEffect(() => {\n    if (window.chrome && window.chrome.runtime && window.chrome.runtime.id) {\n      // Code running in a Chrome extension (content script, background page, etc.)\n      setIsChromeExtension(true);\n      window.chrome.tabs.query(\n        { active: true, lastFocusedWindow: true },\n        (tabs) => {\n          window.chrome.scripting.executeScript({\n            files: [\"content.js\"],\n            target: { tabId: tabs[0].id },\n          });\n        }\n      );\n      window.chrome.runtime.onMessage.addListener(function (\n        message,\n        sender,\n        sendResponse\n      ) {\n        if (message.data) {\n          setAuthToken(message.data);\n        }\n      });\n    }\n  }, []);\n\n  return (\n    <div\n      className=\"App\"\n      {...(isChromeExtension && { style: { width: \"600px\", height: \"600px\" } })}\n    >\n      <AuthContextProvider\n        value={{\n          auth: { authToken, setAuthToken },\n          selectedBeneficiaries: {\n            selectedBeneficiaries,\n            setSelectedBeneficiaries,\n          },\n        }}\n      >\n        <h2 className=\"title\">Cowin Booking Helper</h2>\n        {authToken ? (\n          steps[step]\n        ) : (\n          <>\n            <h5>Instructions:</h5>\n            <ul>\n              {isChromeExtension && (\n                <li>\n                  Please login to cowin portal and then open this extension\n                </li>\n              )}\n              <li>\n                This extension will help you book the slots the moment they're\n                available.\n              </li>\n              <li>\n                Do not close/hide this extension until your slot is booked\n              </li>\n            </ul>\n            {!isChromeExtension && <Login setStep={setStep} />}\n          </>\n        )}\n\n        <Modal show={error} onHide={() => setError(null)}>\n          <Modal.Header closeButton>\n            <Modal.Title>An error occured</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>{error}</Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"primary\" onClick={() => setError(null)}>\n              Close\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </AuthContextProvider>\n      <TermsOfUse />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}